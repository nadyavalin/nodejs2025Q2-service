services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.app
    image: nadyavalin/library-app:latest
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NODE_ENV=production
    volumes:
      - ./src:/app/src:ro
    networks:
      - library-network
    restart: unless-stopped
  test:
    build:
      context: .
      dockerfile: Dockerfile.app
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NODE_ENV=test
    volumes:
      - ./src:/app/src:ro
      - ./test:/app/test:ro
    networks:
      - library-network
    command: [ "npm", "run", "test" ]
  db:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: library_user
      POSTGRES_PASSWORD: library_password
      POSTGRES_DB: home_library
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./logs:/var/log/postgresql
    networks:
      - library-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U library_user -d home_library" ]
      interval: 5s
      timeout: 5s
      retries: 10
networks:
  library-network:
    driver: bridge
volumes:
  pgdata:
